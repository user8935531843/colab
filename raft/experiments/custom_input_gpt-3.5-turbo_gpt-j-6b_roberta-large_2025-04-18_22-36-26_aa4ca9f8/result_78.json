{
    "original": "Acoustic-prosodic entrainment is a phenomenon in spoken dialogue where individuals align their speech patterns during conversation. This behavior plays a vital role in the success of communication interactions. To effectively model this subtle form of entrainment, we introduce a new definition for local entrainment in speech and develop an algorithm to quantify it. Our method utilizes acoustic-prosodic features to measure entrainment by comparing conversations between real partners to artificially generated conversations. By analyzing the differences in speech features on a turn-by-turn basis, we project the data onto a feature subspace that maximizes the distinction between real and artificial conversations. Using these derived features, we train a Naive Bayes classifier to predict conversational success levels. Our approach achieves a classification accuracy of 72%, outperforming existing methods on a dataset of task-oriented conversations. This research sheds light on the significance of entrainment in spoken communication and provides a novel and effective methodology for its measurement. Artificial intelligence algorithms have the potential to exhibit bias, perpetuating societal inequalities. \"Human-in-the-loop\" approaches, which involve human intervention in algorithmic processes to detect and mitigate biases, are gaining attention. However, little research has been done on how different presentation styles can impact the effectiveness of these approaches. This study explores the impact of presentation style on human detection of algorithmic bias and feedback elicitation. By conducting an experiment using various presentation styles on a dataset with potentially biased labels, we provide preliminary findings suggesting that certain presentation styles may be more successful in detecting bias and prompting feedback from human operators. These results could inform the design of future human-in-the-loop approaches and enhance efforts to detect and address algorithmic bias effectively. The proliferation of obfuscated software has presented challenges for software security practitioners. Compiler-based obfuscation is widely used, with methods being injected at the compiler level. In this paper, we present a generic approach for deobfuscating and recompiling obfuscated code utilizing the LLVM compiler framework. By lifting binary code to the LLVM intermediate language, recover the control flow graph of obfuscated functions using an iterative control flow graph construction algorithm based on compiler optimizations and SMT solving. Our approach leverages strong compiler optimizations available in LLVM and Souper Optimizer to simplify obfuscated code. Experimental results demonstrate the effectiveness of our approach in weakening or eliminating obfuscation techniques typically used by commercial obfuscators. The deobfuscated LLVM-IR can be further processed with custom deobfuscation passes at the same level as obfuscation techniques or recompiled with existing LLVM backends. This work is implemented in SATURN, a deobfuscation tool designed to aid in analyzing and understanding obfuscated code. SATURN's innovative approach and effectiveness make it a valuable asset for software security practitioners grappling with obfuscated code challenges.",
    "sampled": "Acoustic-prosodic entrainment is a phenomenon in spoken dialogue where individuals align their speech patterns throughout conversation. This behavior plays a vital role in the success of communication interactions. To effectively model this subtle form of entrainment, we introduce a new definition for localized entrainment in speech and develop an algorithm to quantify it. Our method utilizes acoustic-prosodic features to measure entrainment by comparing dialogues between real partners to artificially generated conversations. By analyzing the differences in speech features on a turn-by-turn basis, we project the data onto a feature subspace that maximizes the distinction between real and artificial conversations. Using these derived features, we train a Naive Bayes classifier to predict conversational success levels. Our approach achieves a classification accuracy of 72%, outperforming existing methods on a dataset of task-oriented conversations. This research sheds light on the significance of entrainment in spoken communication and provides a novel and effective methodology for its measurement. Artificial intelligence algorithms have the potential to exhibit bias, perpetuating societal inequalities. \"Human-in-the-loop\" approaches, which involve human intervention in algorithmic processes to detect and mitigate biases, are gaining attention. However, little research has been done on how different presentation styles can impact the effectiveness of these approaches. This study explores the impact of presentation style on human detection of algorithmic bias and feedback elicitation. By conducting an experiment using various presentation styles on a dataset with potentially biased labels, we provide preliminary findings suggesting that certain presentation styles may be more successful in detecting bias and prompting feedback from human operators. These results could inform the design of future human-in-the-loop approaches and enhance efforts to detect and address algorithmic bias effectively. The proliferation of obfuscated software has presented challenges for software security practitioners. Compiler-based obfuscation is widely used, with methods being injected at the compiler level. In this paper, we present a generic approach for deobfuscating and recompiling obfuscated code utilizing the LLVM compiler framework. By lifting binary code to the LLVM intermediate language, recover the control flow graph of obfuscated functions using an iterative control flow graph construction algorithm based on compiler optimizations and SMT solving. Our approach leverages powerful compiler optimizations available in LLVM and Souper Optimizer to simplify obfuscated code. Experimental results demonstrate the effectiveness of our approach in weakening or eliminating obfuscation techniques generally used by commercial obfuscators. The deobfuscated LLVM-IR can be further processed with custom deobfuscation passes at the same level as obfuscation techniques or recompiled with existing LLVM backends. This work is implemented in SATURN, a deobfuscation tool designed to aid in analyzing and understanding obfuscated code. SATURN's innovative approach and effectiveness make it a valuable asset for software security practitioners grappling with obfuscated code challenges.",
    "replacement_keys": [
        14,
        42,
        63,
        353,
        380
    ],
    "original_crit": 0.0019235509680584073,
    "sampled_crit": 0.0012650525895878673,
    "original_llm_likelihood": 0.0019235509680584073,
    "sampled_llm_likelihood": 0.0012650525895878673
}